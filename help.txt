		GPlotter Version 1.0.0 Help Manual


[1] HOW TO PLOT CARTESSIAN GRAPHS
	Cartessian plots in GPlotter follwer a specific pattern for the 
	equations so that the app can generate the desired graph. It 
	is not different from any common mathematical syntax for 
	writting equations but requires some specifications to be able 
	to properly read the equation and process it to generate the 
	points to be plotted.
	
	---Generally a simply linear equation takes the form
		y=m*x+c
	In the above equation, you must specify the dependent variable 
	which is just one of two; x or y.
	Also you must specify the equality sign and every binary 
	operator between variables and constants. An equation of the 
	form
		y=mx+c
	will result in an error because the binary operator between m 
	and x has not been specified.
	
	---It is also lawful to use brackets when writting your 
	equations to group them;
		y=(x+1)^2-3
	The above equation is valid and will be processed by the app. 
	Note should be taken on how powers are specified. In the above 
	equation we see that powers are specified using the ^ sign.
	
	---For rational equations you use the / operator to create 
	rational equations. So equations of the form
		y=1/x
		y=x^2/(x+1)
	 are all valid rational equations

	 ---In order to model absolute value graphs, there is a 
	 specific key word you must use. The following example shows 
	 how to write absolute value equations;
	 	y=abs(x)
	 	x=abs(x+1)-2
	 You see from above that we specify absolute value sign using 
	 the function abs()
	 
	 ---For exponential graphs it is wise to write all exponential 
	 and logarithmic equations using the their index form.
	 For example the graph of y=log10(x) is written as
	 	x=10^y
	 The graph of y=ln(x) is written as
	 	x=e^y
	 Using this method, you can model any exponential or 
	 logarithmic graph.
	 
	 ---For trigonometric graphs, you can only use the standard 
	 trigonometric and hyperbolic functions such as:
	 	sin, cos, tan, asin, acos, atan
	 	sinh, cosh, tanh, asinh, acosh, atanh
	 Combining these functions with the rules above enables you to 
	 model even complex graphs. For example
	 	y=sin(2*x)
	 	x=1/cosh(y)
	 	y=tan(x^3)
	 	y=abs(sinh(x))
	 are some examples of trigonometric and hyperbolic graphs

[2] HOW TO PLOT POLAR GRAPHS
	The polar coordinate system is a bit different from the 
	cartessian coordinate system. Here the two dependent variables 
	are r and t.
		r = radius
		t = theta (angle); 0 <= t <= 4*pi

	you can model any polar equation by following the same basic 
	syntax as of the cartessian system but take note of the 
	dependent variables used here.

	---Circles can be generated by simply specifying equations of 
	the form
		r=k where k is a number
	eg: 
		r=2 is a circle of radius 2
	---Lines can be generated here by specifying equations of the 
	form
		t=c where c is an angle in radians
	eg:
		t=pi/2
		t=pi/4
		t=3*pi/2
	We see in the above example that the keyword "pi" is used to 
	represent the PI constant.

	---Other polar curves can be generated by simply writing out 
	its equation while specifying the binary operators between 
	varaibles and constants
	eg:
		r=2*2*cos(t)
		r=3*sin(3*t)
	are all examples of polar curves.

[3] HOW TO PLOT 3D GRAPHS
	The 3D coordinate system is a bit complex because it has an 
	aditional axis. There are 3 5 dependent variables involved in 
	this coordinate system:
	---x,y,z are the dependent and independent variables used to 
	model 3D equations.
	eg:
		z=1
		y=0.2
		x=0
	are all planes in the 3D coordinate frame
	---You can as well model trigonometric, hyperbolic, 
	exponential, rational graphs by following the same rules 
	mentioned above.
	eg:
		z=y*sin(2*x)
		z=(cos(t))^2
	take note that in the 3D coordinate frame the angle in 
	trigonometric and hyperbolic equations can either be t (theta) 
	or x,y,z.

	---To be able to model cylindrical equations, you need to only 
	specify the radius r and the cylinder will be generated
	eg:
		r=2
	generates a cylinder of radius 2

	---To be able to nodel spherical equations, you need to only 
	specify the value of p which is the diagonal radius of the 
	sphere.
	eg:
		p=1
	generates a sphere of diagonal radius 1
	
	
	GPlotter Version 1.0.0
	Copyright (C) 2020 SuperPosition Inv. 